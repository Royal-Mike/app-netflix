<script>
    $(document).ready(function () {
        const video = $('#video')[0];

        let src = '', title = '', runtime = '', genres = '', overview = '', genreIds = '', page = 1, total_pages = -1;
        $('video').prop('volume', '0.1').prop('muted', true);

        $('.movie-hoverred').each(function () {
            $(this).on('mouseover', function () {
                $('.movie-actions', this).removeClass('d-none');
                $('.thumbnail', this).addClass('d-none');

                $('.run-video-when-hovering', this).removeClass('d-none');

                src = $('.thumbnail', this).attr('src');
                title = $('.thumbnail', this).attr('data-title');
                overview = $('.thumbnail', this).attr('data-overview');

                if (title) title = title.toUpperCase();
                runtime = $('.movie-runtime', this).text();

                genres = '';
                genreIds = '';

                $('.all-genre', this).each(function () {
                    const genre = $(this).text().trim();
                    genres = genres + genre + ", ";
                });

                $('.genre-id', this).each(function () {
                    const id = $(this).text().trim();
                    genreIds += id + ",";
                });

                if (genres) {
                    genres = genres.slice(0, genres.length - 2);
                }

                if (genreIds) {
                    genreIds = genreIds.slice(0, genreIds.length - 1);
                }

                const video = $('.run-video-when-hovering > video', this)[0];
                const checkAvailability = video.play();
                if (checkAvailability !== undefined) {
                    checkAvailability.then(() => {
                    }).catch(error => {
                        video.muted = true;
                        video.play();
                    });
                }

                $(this).css({
                    'transform': 'scale(1.5)',
                    'transition': '0.5s',
                    'position': 'relative',
                });
            });

            $(this).on('mouseleave', function () {
                $('.movie-actions', this).addClass('d-none');
                $('.thumbnail', this).removeClass('d-none');
                $('.run-video-when-hovering', this).addClass('d-none');
                $('.run-video-when-hovering > video', this)[0].pause();
                $('.run-video-when-hovering > video', this)[0].currentTime = 0;
                $(this).css({
                    'transform': 'scale(1)',
                    'transition': '0.5s',
                });
            });
        });

        $('.open-movie-details').on('click', function () {
            {{#unless search}} if (!video.muted) $('.volumn').trigger('click'); {{/unless}}

            const position = window.scrollY;
            let poster_template = `{{> poster}}`;

            const url = `https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=${page}&sort_by=popularity.desc&with_genres=${genreIds}`;
            const options = {
                method: 'GET',
                headers: {
                    accept: 'application/json',
                    Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmNDNmZjQyN2ExYzJjZjYzMDRlNzZiYWQ2MzVmMjFhOSIsInN1YiI6IjY2MGI5ZDllOWM5N2JkMDE3Y2E0YjI2NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WGH-mBZJE25NOc9WuEDiwzQnNtlSorvr7oI-s2erpsU'
                }
            };

            fetch(url, options)
            .then(res => res.json())
            .then(
                json => {
                    total_pages = json.total_pages;
                    const MoreLikeThis = json.results;

                    let list = ``;
                    let i = 0;

                    MoreLikeThis.forEach(movie => {
                        if (movie.title.toLowerCase() != title.toLowerCase()) {
                            let age = movie.adult ? "18+" : "13+";
                            let year = movie.release_date.split('-')[0];
                            list += 
                            `
                            <div class="col">
                                <div class="card h-100" style="padding: .2rem !important;">
                                    <img src="https://image.tmdb.org/t/p/original${movie.poster_path}" class="card-img-top" alt="..." style="height: 14rem">
                                    <div class="card-body">
                                        <h5 class="card-title d-flex" style="font-size: 1rem;">
                                            <div class="d-flex align-items-center">
                                                <p class="border ps-2 pe-2 m-0 me-2 fw-bold" style="font-size: 1rem;">${age}</p>
                                                <p class="rounded border ps-2 pe-2 m-0 me-2" style="font-size: .7rem;">HD</p>
                                                <p class="m-0" style="font-size: 1rem;">${year}</p>
                                                <i class="fa-solid fa-podcast fs-5 ms-2"></i>
                                            </div>

                                            <div
                                                class="rounded-circle ms-2 d-flex justify-content-center align-items-center border border-2 p-1 ms-auto">
                                                <i class="fa-solid fa-plus fs-4"></i>
                                            </div>
                                        </h5>
                                        <p class="card-text overview">${movie.overview}</p>
                                    </div>
                                </div>
                            </div>
                            `
                        }
                    });

                    poster_template = poster_template.replace('listmovies', list);
                    $('.outer-container').append(poster_template);
                })
            .catch(err => console.error('error:' + err));

            $('body').addClass('noscroll');

            $('.all-movies').css({
                'pointer-events': 'none',
            });
            $('.all-movies').addClass('unscrollable');

            genres = '';
            $('.overlay-left, .overlay-right').removeClass('invisible');

            setTimeout(() => {
                $('#play-video-in-poster').addClass('d-none');
                $('#poster-video')[0].play();
                $('#poster-video').prop('volume', '0.1');
                $('#video-in-poster').removeClass('d-none');
            }, 1000);

            const posterVideo = $('#poster-video')[0];

            $('.poster-container .turn-on-volumn').on('click', function () {
                posterVideo.muted = true;
                $(this).addClass('d-none');
                $('.poster-container .turn-off-volumn').removeClass('d-none');
            })

            $('.poster-container .turn-off-volumn').on('click', function () {
                posterVideo.muted = false;
                $(this).addClass('d-none');
                $('.poster-container .turn-on-volumn').removeClass('d-none');
            })
        });

        $('body').on('click', '.cancel-review', function () {
            $('.poster-container').css({
                'animation': 'removePoster 0.5s'
            });

            $('body').removeClass('noscroll');

            $('#video-in-poster').addClass('d-none');
            $('#video-in-poster').currentTime = 0;
            $('#play-video-in-poster', this).removeClass('d-none');

            setTimeout(() => {
                $('.poster-container').remove();
            }, 500)

            $('.all-movies').css({
                'pointer-events': '',
            });
            $('.all-movies').removeClass('unscrollable');
            $('.overlay-left, .overlay-right').addClass('invisible');
        });

        $('body').on('click', '.play-video', function () {
            window.location.href = `/watch?name=${title}`;
        });
    });
</script>